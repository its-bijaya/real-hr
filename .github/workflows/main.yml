# CI for building lms frontend and push to dockerhub

name: CI
on:
    # This will trigger action on every push on branch ci and start
    push:
        branches:
             - main
            # - stage
    pull_request:
        branches:
            - main
            - stage
    #This will allow you to run action manually.
    workflow_dispatch:

jobs:
    build-dist:
        runs-on: self-hosted

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20.x'
            - name: Install Yarn
              run: npm install -g yarn

            - name: Install dependencies
              run: yarn
            - name: Build
              run: yarn docs:build
            - name: setup docker
              run: |
                 docker context use default
            - uses: docker/setup-buildx-action@v1           
            - name: login docker registry 
              env:
                  DOCKER_USER: qaqc
                  DOCKER_PASSWORD: qa@qc
              run: |
                    docker login dhub.aayulogic.io -u $DOCKER_USER -p $DOCKER_PASSWORD
            - name: Build Image and Pushing to DHUB
              env: 
                DHUB_REPO: dhub.aayulogic.io 
                DOMAIN_NAME: 192.168.1.96

              run: |
                      echo $GITHUB_WORKSPACE
                      ls -l $GITHUB_WORKSPACE
                      echo ${GITHUB_REF##*/}      
                      if [ "${{ github.event_name }}" == "pull_request" ]; then
                        PR_BRANCH=$(echo ${{ github.event.pull_request.head.ref }} | tr -d '/')
                      elif [ "${{ github.event_name }}" == "push" ]; then
                        PR_BRANCH=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | tr -d '/')
                        echo "Push event on branch: $PR_BRANCH"
                      fi
                      docker build -f $GITHUB_WORKSPACE/docker/Dockerfile . -t dhub.aayulogic.io/v2/production/lms_fe_docs:${PR_BRANCH##*/}
                      docker push dhub.aayulogic.io/v2/production/lms_fe_docs:${PR_BRANCH##*/}        
    Deploy:
         runs-on: self-hosted
         needs: build-dist   
         steps:
           - uses: actions/checkout@v2
           - name: replace TAG name with PR_Branch
             run: |
               if [ "${{ github.event_name }}" == "pull_request" ]; then
                 PR_BRANCH=$(echo ${{ github.event.pull_request.head.ref }} | tr -d '/')
               elif [ "${{ github.event_name }}" == "push" ]; then
                 PR_BRANCH=$(echo ${{ github.ref }} | sed 's/refs\/heads\///' | tr -d '/')
                 echo "Push event on branch: $PR_BRANCH"
               fi
               sed -i "s/\${TAG}/${PR_BRANCH}/g" docker/docker-compose.yml       
           - name: Send docker compose file to production server
             uses: appleboy/scp-action@master
             with:
               host: 192.168.1.96
               username: ubuntu
               port: 22
               key: ${{ secrets.SERVER_KEY }}
               source: docker/docker-compose.yml
               #for exclude files /Docker/!.en/
               target: /home/ubuntu
               rm: false    #this will delete existing file
           - name: Run docker compose
               #for run this ssh you have to put pulic key to authorizes key 
               # chnage permissions 700 for .ssh & 640 for authorized_key
               # for more https://github.com/appleboy/ssh-action
             uses: appleboy/ssh-action@v1.0.0
     
             with:
               host: 192.168.1.96
               username: ubuntu
               port: 22
               key: ${{ secrets.SERVER_KEY }}
               # export tag command will fetch tag from git to match latest build image
               script: |
                   ls -la ~/docker 
                   which docker compose
                   mv ~/docker/docker-compose.yml ~/
                   docker compose -f ~/docker-compose.yml pull 
                   docker compose -f ~/docker-compose.yml up -d --remove-orphans 
     